import os
import tensorflow as tf 
import numpy as np
import matplotlib.pyplot as plt 
keras=tf.keras
import tensorflow_datasets as tfds 
tfds.disable_progress_bar()
(raw_train,raw_validation,raw_test), metadata=tfds.load(
    'cats_vs_dogs',
    split=['train[:80%]','train[80%:90%]','train[90%:]'],
    with_info=True,
    as_supervised=True
)
get_label_name=metadata.features['label'].int2str

for image,label in raw_train.take(2):
  plt.figure()
  plt.imshow(image)
  plt.title(get_label_name(label))
  #we need to resize the images so that they are of same size
img_size=160
def resizeimg(image,label):
  image=tf.cast(image,tf.float32)
  image=(image/127.5) -1
  image=tf.image.resize(image,(img_size,img_size))
  return image,label 
train=raw_train.map(resizeimg)
validation=raw_validation.map(resizeimg)
test=raw_test.map(resizeimg)
for image,label in train.take(2):
  plt.figure()
  plt.imshow(image)
  plt.title(get_label_name(label))
  

#comparing shape of old image and new image 
for image,label in train.take(2):
    print(image.shape)
for image,label in raw_train.take(2):
    print(image.shape)
  
  
